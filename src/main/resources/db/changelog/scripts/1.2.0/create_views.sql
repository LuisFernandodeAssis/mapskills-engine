CREATE VIEW RADAR_RESULT_VIEW AS
	SELECT SQE.USE_ID AS USER_ID,
        SKILL.SKI_TYPE AS SKILL_TYPE,
        SKILL.SKI_DESCRIPTION AS SKILL_DESCRIPTION,
        SUM(SQE.SQE_SKILL_VALUE) AS TOTAL
	FROM SKILL
	INNER JOIN STUDENT_QUESTION_EVENT SQE
	ON SQE.SKI_ID = SKILL.SKI_ID
	GROUP BY USER_ID, SKILL_TYPE, SKILL_DESCRIPTION
	ORDER BY SKILL.SKI_TYPE ASC;

CREATE VIEW INSTITUTION_STUDENTS_PROGRESS_VIEW AS
	SELECT
		SUBSTR(s.STU_RA, 7, 3) AS YEAR_SEMESTER,
		INSTITUTION.INS_CODE AS INSTITUTION_CODE,
	    INSTITUTION.INS_LEVEL AS LEVEL,
	    COURSE.CRS_CODE AS COURSE_CODE,
		COURSE.CRS_NAME AS COURSE_NAME,
	    (SELECT COUNT(*) FROM STUDENT STU
			WHERE STU.STU_IS_COMPLETED = 0 AND STU.CRS_CODE = COURSE.CRS_CODE
	        AND SUBSTR(STU.STU_RA, 7, 3) = SUBSTR(s.STU_RA, 7, 3)
	        GROUP BY STU.CRS_CODE) AS NOT_FINALIZED,
	    (SELECT COUNT(*) FROM STUDENT STUD
			WHERE STUD.STU_IS_COMPLETED = 1 AND STUD.CRS_CODE = COURSE.CRS_CODE
	        AND SUBSTR(STUD.STU_RA, 7, 3) = SUBSTR(s.STU_RA, 7, 3)
	        GROUP BY STUD.CRS_CODE) AS FINALIZED
	FROM STUDENT s INNER JOIN COURSE ON COURSE.CRS_CODE = s.CRS_CODE
				 INNER JOIN INSTITUTION ON COURSE.INS_CODE = INSTITUTION.INS_CODE
	GROUP BY YEAR_SEMESTER, INSTITUTION_CODE, 3, 4, 5;
	
CREATE VIEW ADMIN_GLOBAL_STUDENTS_PROGRESS_VIEW AS
	SELECT
		SUBSTR(STUD.STU_RA, 7, 3) AS ANO_SEMESTRE,
	    INSTITUTION.INS_LEVEL AS LEVEL,
	    (SELECT COUNT(*) FROM STUDENT 
			WHERE STU_IS_COMPLETED = 0 AND INS_CODE = INSTITUTION.INS_CODE
	        AND SUBSTR(STUDENT.STU_RA, 7, 3) = SUBSTR(STUD.STU_RA, 7, 3) GROUP BY INS_CODE) AS NOT_FINALIZED,
	    (SELECT COUNT(*) FROM STUDENT
			WHERE STU_IS_COMPLETED = 1 AND INS_CODE = INSTITUTION.INS_CODE
	        AND SUBSTR(STUDENT.STU_RA, 7, 3) = SUBSTR(STUD.STU_RA, 7, 3) GROUP BY INS_CODE) AS FINALIZED,
		COUNT(*) TOTAL
	FROM STUDENT STUD INNER JOIN INSTITUTION ON STUD.INS_CODE = INSTITUTION.INS_CODE
	GROUP BY SUBSTR(STUD.STU_RA, 7, 3), INSTITUTION.INS_LEVEL;

CREATE VIEW ADMIN_LEVEL_STUDENTS_PROGRESS_VIEW AS
	SELECT
		SUBSTR(STUDENT.STU_RA, 7, 3) AS YEAR_SEMESTER,
		INSTITUTION.INS_CODE,
	    INSTITUTION.INS_LEVEL AS LEVEL,
		INSTITUTION.INS_COMPANY AS INSTITUTION,
	    (SELECT COUNT(*) FROM STUDENT 
			WHERE STU_IS_COMPLETED = 0 AND INS_CODE = INSTITUTION.INS_CODE
	        AND SUBSTR(STUDENT.STU_RA, 7, 3) = SUBSTR(STUD.STU_RA, 7, 3) GROUP BY INS_CODE) AS NOT_FINALIZED,
	    (SELECT COUNT(*) FROM STUDENT
			WHERE STU_IS_COMPLETED = 1 AND INS_CODE = INSTITUTION.INS_CODE
	        AND SUBSTR(STUDENT.STU_RA, 7, 3) = SUBSTR(STUD.STU_RA, 7, 3) GROUP BY INS_CODE) AS FINALIZED,
	
	    COUNT(*) AS TOTAL
	
	FROM STUD INNER JOIN INSTITUTION ON STUDENT.INS_CODE = INSTITUTION.INS_CODE
	GROUP BY SUBSTR(STUDENT.STU_RA, 7, 3), INSTITUTION.INS_CODE, INSTITUTION.INS_LEVEL, INSTITUTION.INS_COMPANY;
	
CREATE VIEW CSV_REPORT_VIEW AS
	SELECT	USER.USE_ID AS STUDENT_ID,
    		STUDENT.STU_RA AS STUDENT_RA,
    		USER.USE_NAME AS STUDENT_NAME,
    		COURSE.CRS_CODE AS COURSE_CODE,
    		COURSE.CRS_NAME AS COURSE,
    		INSTITUTION.INS_CODE AS INSTITUTION_CODE,
    		INSTITUTION.INS_COMPANY AS INSTITUTION,
    		INSTITUTION.INS_LEVEL AS INSTITUTION_LEVEL,
    		CONCAT('20', SUBSTR(STUDENT.STU_RA, 7, 2), '/', SUBSTR(STUDENT.STU_RA, 9, 1)) YEAR_SEMESTER
	FROM STUDENT INNER JOIN USER ON STUDENT.USE_ID = USER.USE_ID
				 INNER JOIN COURSE ON STUDENT.CRS_CODE = COURSE.CRS_CODE
	             INNER JOIN INSTITUTION ON STUDENT.INS_CODE = INSTITUTION.INS_CODE
	WHERE STUDENT.STU_IS_COMPLETED = TRUE
	ORDER BY YEAR_SEMESTER DESC, STUDENT_RA;