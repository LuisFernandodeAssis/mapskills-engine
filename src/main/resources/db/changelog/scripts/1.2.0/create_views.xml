<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext 
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<changeSet author="marcelo-inacio" id="create-views">
	    <createView catalogName="MAPSKILLS"
	            replaceIfExists="false"
	            viewName="RADAR_RESULT_VIEW">
		            SELECT SQE.USE_ID AS USER_ID,
			            SKILL.SKI_TYPE AS SKILL_TYPE,
			            SKILL.SKI_DESCRIPTION AS SKILL_DESCRIPTION,
			            SUM(SQE.SQE_SKILL_VALUE) AS TOTAL
					FROM SKILL
					INNER JOIN STUDENT_QUESTION_EVENT SQE
					ON SQE.SKI_ID = SKILL.SKI_ID
					GROUP BY USER_ID, SKILL_TYPE, SKILL_DESCRIPTION
					ORDER BY SKILL.SKI_TYPE ASC
		</createView>
		
		<createView catalogName="MAPSKILLS"
	            replaceIfExists="false"
	            viewName="INSTITUTION_STUDENTS_PROGRESS_VIEW">
		            SELECT
						SUBSTR(STU.STU_RA, 7, 3) AS YEAR_SEMESTER,
						INSTITUTION.INS_CODE,
						INSTITUTION.INS_LEVEL AS LEVEL,
						COURSE.CRS_CODE,
						COURSE.CRS_NAME AS COURSE,
						(SELECT COUNT(*) FROM STUDENT 
							WHERE STU_IS_COMPLETED = 0 AND CRS_CODE = COURSE.CRS_CODE
							AND SUBSTR(STUDENT.STU_RA, 7, 3) = SUBSTR(STU.STU_RA, 7, 3) GROUP BY CRS_CODE) AS NOT_FINALIZED,
						(SELECT COUNT(*) FROM STUDENT
							WHERE STU_IS_COMPLETED = 1 AND CRS_CODE = COURSE.CRS_CODE
							AND SUBSTR(STUDENT.STU_RA, 7, 3) = SUBSTR(STU.STU_RA, 7, 3) GROUP BY CRS_CODE) AS FINALIZED
					FROM STUDENT STU INNER JOIN COURSE ON COURSE.CRS_CODE = STU.CRS_CODE
									 INNER JOIN INSTITUTION ON COURSE.INS_CODE = INSTITUTION.INS_CODE
					GROUP BY SUBSTR(STU.STU_RA, 7, 3), INSTITUTION.INS_CODE, LEVEL, COURSE.CRS_CODE, COURSE
		</createView>
		
		<createView catalogName="MAPSKILLS"
	            replaceIfExists="false"
	            viewName="ADMIN_GLOBAL_STUDENTS_PROGRESS_VIEW">
		            SELECT
						SUBSTR(stu.STU_RA, 7, 3) AS YEAR_SEMESTER,
					    institution.INS_LEVEL AS LEVEL,
					    (SELECT count(*) FROM student 
							WHERE STU_IS_COMPLETED = 0 AND INS_CODE = institution.INS_CODE
					        AND SUBSTR(student.STU_RA, 7, 3) = YEAR_SEMESTER GROUP BY INS_CODE) AS NOT_FINALIZED,
					    (SELECT count(*) FROM student
							WHERE STU_IS_COMPLETED = 1 AND INS_CODE = institution.INS_CODE
					        AND SUBSTR(student.STU_RA, 7, 3) = YEAR_SEMESTER GROUP BY INS_CODE) AS FINALIZED,
						COUNT(*) TOTAL
					FROM student stu INNER JOIN institution ON stu.INS_CODE = institution.INS_CODE
					GROUP BY YEAR_SEMESTER, LEVEL
		</createView>
		
		<createView catalogName="MAPSKILLS"
	            replaceIfExists="false"
	            viewName="ADMIN_LEVEL_STUDENTS_PROGRESS_VIEW">
		            SELECT
						SUBSTR(stu.STU_RA, 7, 3) AS YEAR_SEMESTER,
						institution.INS_CODE,
					    institution.INS_LEVEL AS LEVEL,
						institution.INS_COMPANY AS INSTITUTION,
					    (SELECT count(*) FROM student 
							WHERE STU_IS_COMPLETED = 0 AND INS_CODE = institution.INS_CODE
					        AND SUBSTR(student.STU_RA, 7, 3) = YEAR_SEMESTER GROUP BY INS_CODE) AS NOT_FINALIZED,
					    (SELECT count(*) FROM student
							WHERE STU_IS_COMPLETED = 1 AND INS_CODE = institution.INS_CODE
					        AND SUBSTR(student.STU_RA, 7, 3) = YEAR_SEMESTER GROUP BY INS_CODE) AS FINALIZED,
					
					    COUNT(*) AS TOTAL
					
					FROM student stu INNER JOIN institution ON stu.INS_CODE = institution.INS_CODE
					GROUP BY YEAR_SEMESTER, institution.INS_CODE, LEVEL, INSTITUTION
		</createView>
		
		<createView catalogName="MAPSKILLS"
	            replaceIfExists="false"
	            viewName="CSV_REPORT_VIEW">
					SELECT	user.use_id AS student_id,
		            		student.stu_ra AS student_ra,
		            		user.use_name AS student_name,
		            		course.crs_code AS course_code,
		            		course.crs_name AS course,
		            		institution.ins_code AS institution_code,
		            		institution.ins_company AS institution,
		            		institution.ins_level AS institution_level,
		            		CONCAT('20', SUBSTR(student.stu_ra, 7, 2), '/', SUBSTR(student.stu_ra, 9, 1)) yaer_semester
					FROM student INNER JOIN user ON student.use_id = user.use_id
								 INNER JOIN course ON student.crs_code = course.crs_code
					             INNER JOIN institution ON student.ins_code = institution.ins_code
					WHERE student.stu_is_completed = TRUE
					ORDER BY yaer_semester DESC, student_ra
		</createView>
	</changeSet>

</databaseChangeLog>