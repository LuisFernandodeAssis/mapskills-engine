CREATE SCHEMA MAPSKILLS;

CREATE TABLE IF NOT EXISTS MAPSKILLS.PROFILE (PRO_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, PRO_NAME VARCHAR(255));

CREATE TABLE IF NOT EXISTS MAPSKILLS.USER (USE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, USE_NAME VARCHAR(255), USE_USERNAME VARCHAR(255), USE_PASSWORD VARCHAR(255), PRO_ID INTEGER, FOREIGN KEY (PRO_ID) REFERENCES MAPSKILLS.PROFILE(PRO_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.INSTITUTION (INS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, INS_CODE VARCHAR(5) UNIQUE, INS_CNPJ VARCHAR(20), INS_COMPANY VARCHAR(250), INS_CITY VARCHAR(250), INS_LEVEL INTEGER, GTH_ID INTEGER);

CREATE TABLE IF NOT EXISTS MAPSKILLS.MENTOR (USE_ID INTEGER NOT NULL PRIMARY KEY, INS_CODE VARCHAR(5), INS_ID INTEGER, FOREIGN KEY (USE_ID) REFERENCES MAPSKILLS.USER(USE_ID), FOREIGN KEY (INS_ID) REFERENCES MAPSKILLS.INSTITUTION(INS_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.COURSE (CRS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, CRS_CODE VARCHAR(5) UNIQUE, CRS_NAME VARCHAR(250), CRS_PERIOD VARCHAR(50), INS_ID INTEGER, FOREIGN KEY (INS_ID) REFERENCES MAPSKILLS.INSTITUTION(INS_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.STUDENT (USE_ID INTEGER NOT NULL PRIMARY KEY, STU_RA VARCHAR(20), STU_PHONE VARCHAR(15), STU_IS_COMPLETED BOOLEAN, CRS_ID INTEGER, FOREIGN KEY (USE_ID) REFERENCES MAPSKILLS.USER(USE_ID), FOREIGN KEY (CRS_ID) REFERENCES MAPSKILLS.COURSE(CRS_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.ADMINISTRATOR (USE_ID INTEGER NOT NULL PRIMARY KEY, FOREIGN KEY (USE_ID) REFERENCES MAPSKILLS.USER(USE_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.SKILL (SKI_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, SKI_TYPE VARCHAR(100), SKI_DESCRIPTION VARCHAR(250));

CREATE TABLE IF NOT EXISTS MAPSKILLS.GAME_THEME (GTH_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, GTH_NAME VARCHAR(250), GTH_IS_ACTIVE BOOLEAN);

CREATE TABLE IF NOT EXISTS MAPSKILLS.QUESTION (QUE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, SKI_ID INTEGER NOT NULL, FOREIGN KEY (SKI_ID) REFERENCES MAPSKILLS.SKILL(SKI_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.ALTERNATIVE (ALT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, ALT_DESCRIPTION VARCHAR(250), ALT_SKILL_VALUE INTEGER, QUE_ID INTEGER, FOREIGN KEY (QUE_ID) REFERENCES MAPSKILLS.QUESTION(QUE_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.SCENE (SCN_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, SCN_INDEX INTEGER, SCN_TEXT VARCHAR(250), SCN_URL_BACKGROUND VARCHAR(250), GTH_ID INTEGER, QUE_ID INTEGER, FOREIGN KEY (GTH_ID) REFERENCES MAPSKILLS.GAME_THEME(GTH_ID), FOREIGN KEY (QUE_ID) REFERENCES MAPSKILLS.QUESTION(QUE_ID));

CREATE TABLE IF NOT EXISTS MAPSKILLS.STUDENT_QUESTION_EVENT (SQE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, SQE_DATE DATE, SQE_SKILL_VALUE INTEGER, USE_ID INTEGER, SKI_ID INTEGER, SCN_ID INTEGER, SCN_INDEX INTEGER, FOREIGN KEY (USE_ID) REFERENCES MAPSKILLS.STUDENT(USE_ID), FOREIGN KEY (SCN_ID) REFERENCES MAPSKILLS.SCENE(SCN_ID), FOREIGN KEY (SKI_ID) REFERENCES MAPSKILLS.SKILL(SKI_ID));